openapi: 3.0.0
info:
  title: Translation Management API
  version: 1.0.0
  description: >
    High-performance translation service for multi-language applications.
    Supports tagging, search, real-time JSON export, and secure token-based access.
    Built for scalability with 100k+ records and sub-500ms response times.

servers:
  - url: http://localhost:8080/api
    description: Local Development Server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Enter your Laravel Sanctum token in the format: `1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`

  schemas:
    Translation:
      type: object
      properties:
        id:
          type: integer
          example: 1
        key:
          type: string
          example: login.title
        group:
          type: string
          example: auth
        locale:
          $ref: '#/components/schemas/Locale'
        content:
          type: string
          example: Sign In
        tags:
          type: array
          items:
            type: string
          example: [web, mobile]

    Locale:
      type: object
      properties:
        id:
          type: integer
          example: 1
        code:
          type: string
          example: en
        name:
          type: string
          example: English

    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: The given data was invalid.
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

    TokenResponse:
      type: object
      properties:
        message:
          type: string
          example: Authenticated development token
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
        token:
          type: string
          example: 1|abc123def456...

paths:
  /token/create:
    get:
      summary: Create a temporary user and API token (dev only)
      description: |
        **Only available in local environment.**
        Creates a demo user and returns a Sanctum Bearer token for testing API endpoints.
        Use this to quickly get started in Postman or Swagger UI.
      tags: [Authentication]
      responses:
        '200':
          description: Valid token and user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '404':
          description: Not available in production

  /translations:
    get:
      summary: List translations with pagination
      tags: [Translations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Paginated list of translations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Translation'
                  links:
                    type: object
                  meta:
                    type: object

    post:
      summary: Create a new translation
      tags: [Translations]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [key, locale_id, content]
              properties:
                key:
                  type: string
                  example: dashboard.welcome
                group:
                  type: string
                  example: ui
                  description: Optional, defaults to 'default'
                locale_id:
                  type: integer
                  example: 1
                content:
                  type: string
                  example: Welcome back!
                tag_names:
                  type: array
                  items:
                    type: string
                  example: [web, admin]
      responses:
        '201':
          description: Translation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /translations/{id}:
    get:
      summary: Get a single translation
      tags: [Translations]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Single translation with tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
        '404':
          description: Translation not found

    put:
      summary: Update translation content and tags
      tags: [Translations]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [content]
              properties:
                content:
                  type: string
                  example: Updated text
                tag_names:
                  type: array
                  items:
                    type: string
                  example: [mobile, web]
      responses:
        '200':
          description: Translation updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Translation'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      summary: Delete a translation
      tags: [Translations]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Translation deleted successfully

  /translations/search:
    get:
      summary: Search translations by key, content, or tags
      tags: [Search]
      security:
        - bearerAuth: []
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Partial match on translation key
        - name: content
          in: query
          schema:
            type: string
          description: Partial match on content
        - name: tags
          in: query
          schema:
            type: string
          description: Comma-separated tag names (e.g. web,mobile)
      responses:
        '200':
          description: List of matching translations (max 100)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Translation'

  /translations/export/{locale}:
    get:
      summary: Stream all translations for a locale as JSON
      description: |
        Always returns updated data. Optimized with chunked streaming for large datasets.
        Ideal for frontend consumption (e.g. Vue.js).
      tags: [Export]
      security:
        - bearerAuth: []
      parameters:
        - name: locale
          in: path
          required: true
          schema:
            type: string
            example: en
          description: Locale code (e.g. en, fr, es)
      responses:
        '200':
          description: Streamed JSON array of translations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    group:
                      type: string
                    content:
                      type: string
                    tags:
                      type: array
                      items:
                        type: string
        '404':
          description: Locale not found